# GuerillaBackup main configuration file.

# General parameters influence behavior of various backup elements,
# e.g. source units, sinks or the generator itself. All those
# parameters start with "General" to indicate their global relevance.

# This is the default persistency storage base directory for all
# components. All components will create files or subdirectories
# starting with the component class name unless changed within
# configuration. See also "ComponentPersistencyPrefix" in unit
# or subunit configuration files.
# GeneralPersistencyBaseDir = '/var/lib/guerillabackup/state'

# This is the default runtime data directory for all components.
# It is used to create sockets, PID files and similar, that need
# not to be preserved between reboots.
# GeneralRuntimeDataDir = '/var/run/guerillabackup'

# This parameter defines the default pipeline element to use to
# compress backup data of any kind before sending it to downstream
# processing, usually encryption of sink. When enabling compression
# and encryption, you may want to disable the additional compression
# step included in many encryption toosl, e.g. via "--compress-algo
# none" in gpg.
# GeneralDefaultCompressionElement = guerillabackup.OSProcessPipelineElement('/bin/bzip2', ['/bin/bzip2', '-c9'])

# This parameter defines the default encryption pipeline element
# to use to encrypt backup data of any kind before sending it
# to donwstream processing. For security reasons, a unit might
# use an alternative encryption element, e.g. with different options
# or keys, but it should NEVER ignore the parameter, even when
# unit-specific encryption is disabled. Hence the unit shall never
# generate uncencrypted data while this parameter is not also
# overriden in the unit-specific configuration. See also function
# "getDefaultDownstreamPipeline" documentation.
# GeneralDefaultEncryptionElement = guerillabackup.GpgEncryptionPipelineElement('some key name')

# Debugging settings:

# This flag enables test mode for all configurable components
# in the data pipe from source to sink. As testing of most features
# will require to run real backups, the testing mode will cause
# an abort in the very last moment before completion. Wellbehaved
# components will roll back most of the actions under this circumstances.
# GeneralDebugTestModeFlag = False


# Generator specific settings: Those settings configure the local
# default backup generator.

# Use this sink for storage of backup data elements. The class
# has to have a constructor only taking one argument, that is
# the generator configuration context as defined by the SinkInterface.
# When empty, the guerillabackup.DefaultFileSystemSink is used.
# GeneratorSinkClass = guerillabackup.DefaultFileSystemSink

# Use this directory for storage of the backup data elements generated
# locally. The default location is "/var/lib/guerillabackup/data".
# You may want also to enable transfer services using this directory
# as source to copy or move backup data to an offsite location.
DefaultFileSystemSinkBaseDir = '/var/lib/guerillabackup/data'

# This parameter defines the conditions that have to be met to
# run any backup unit. The settings is intended to avoid running
# units at unfavorable times, e.g. during machine maintenance,
# immediately during boot time high CPU/disk activity but also
# when there is abnormally high load on the machine. When the
# condition is not met yet it will be reevaluated at the next
# scheduler run, usually some seconds later.
# DefaultUnitRunCondition = guerillabackup.LogicalAndCondition([
#   guerillabackup.MinPowerOnTimeCondition(600),
#   guerillabackup.AverageLoadLimitCondition(0.5, 240)])

# Unit specific default and specific settings can be found in
# the units directory.


# Transfer service configuration: this part of configuration does
# not take effect automatically, a transfer service has to be
# started loading this configuration file. When security considerations
# prohibit use of same configuration, e.g. due to inaccessibility
# of configuration file because of permission settings, then this
# file should be copied to "config-[agent name]" instead.

# Storage directory used by this transfer service. When not present,
# the DefaultFileSystemSinkBaseDir is used instead.
# TransferServiceStorageBaseDir = '/var/spool/guerillabackup/transfer'

# Class to load to define the transfer receiver policy.
# TransferReceiverPolicyClass = guerillabackup.Transfer.ReceiverStoreDataTransferPolicy
# Arguments for creating the named transfer policy to pass after
# the configuration context.
# TransferReceiverPolicyInitArgs = None

# Class to load to define the transfer sender policy.
# TransferSenderPolicyClass = guerillabackup.Transfer.SenderMoveDataTransferPolicy
# Arguments for creating the named transfer policy to pass after
# the configuration context.
# TransferSenderPolicyInitArgs = [False]
